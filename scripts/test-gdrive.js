/**
 * Test Google Drive Integration
 * ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö Google Drive upload
 */

const path = require('path');
const fs = require('fs');
require('dotenv').config();

// Import functions
const { uploadSingleFile, setupGoogleDrive } = require('./upload-to-drive');

async function testGoogleDriveIntegration() {
  console.log('üß™ Testing Google Drive Integration...\n');

  // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Environment Variables
  console.log('1Ô∏è‚É£ Checking Environment Variables:');
  const requiredEnvs = ['GDRIVE_CREDENTIALS', 'GDRIVE_FOLDER_ID'];
  const missingEnvs = requiredEnvs.filter(env => !process.env[env]);
  
  if (missingEnvs.length > 0) {
    console.error(`‚ùå Missing environment variables: ${missingEnvs.join(', ')}`);
    console.log('üìñ Please see GDRIVE-SETUP-GUIDE.md for setup instructions');
    process.exit(1);
  }
  
  console.log('‚úÖ All required environment variables are set\n');

  // 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Drive API
  console.log('2Ô∏è‚É£ Testing Google Drive API Connection:');
  try {
    const drive = setupGoogleDrive();
    console.log('‚úÖ Google Drive API connection successful\n');
  } catch (error) {
    console.error('‚ùå Google Drive API connection failed:', error.message);
    process.exit(1);
  }

  // 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö
  console.log('3Ô∏è‚É£ Creating test file:');
  const testData = {
    test: true,
    timestamp: new Date().toISOString(),
    message: 'UnicornX Google Drive integration test',
    metadata: {
      version: '1.0.0',
      platform: process.platform,
      nodeVersion: process.version
    }
  };

  const testDir = path.join(__dirname, '../temp');
  if (!fs.existsSync(testDir)) {
    fs.mkdirSync(testDir, { recursive: true });
  }

  const testFileName = `gdrive-test-${Date.now()}.json`;
  const testFilePath = path.join(testDir, testFileName);
  fs.writeFileSync(testFilePath, JSON.stringify(testData, null, 2));
  
  console.log(`‚úÖ Test file created: ${testFileName}\n`);

  // 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
  console.log('4Ô∏è‚É£ Testing file upload to Google Drive:');
  try {
    const uploadResult = await uploadSingleFile(
      testFilePath, 
      testFileName, 
      'unicorn-test'
    );

    console.log('‚úÖ Upload successful!');
    console.log(`üìÅ File ID: ${uploadResult.id}`);
    console.log(`üîó View Link: ${uploadResult.webViewLink}\n`);

    // ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    fs.unlinkSync(testFilePath);
    console.log('üóëÔ∏è Test file cleaned up locally\n');

    // 5. ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
    console.log('üìã Test Summary:');
    console.log('‚îú‚îÄ‚îÄ ‚úÖ Environment variables: OK');
    console.log('‚îú‚îÄ‚îÄ ‚úÖ Google Drive API: Connected');
    console.log('‚îú‚îÄ‚îÄ ‚úÖ File creation: OK');
    console.log('‚îú‚îÄ‚îÄ ‚úÖ File upload: Successful');
    console.log('‚îî‚îÄ‚îÄ ‚úÖ Cleanup: Complete\n');

    console.log('üéâ All tests passed! Google Drive integration is working correctly.');
    console.log('üöÄ You can now use the backup features in GitHub Actions and UnicornX.');

  } catch (error) {
    console.error('‚ùå Upload test failed:', error.message);
    
    // ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    if (fs.existsSync(testFilePath)) {
      fs.unlinkSync(testFilePath);
    }
    
    process.exit(1);
  }
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö
if (require.main === module) {
  testGoogleDriveIntegration().catch(error => {
    console.error('‚ùå Test failed:', error.message);
    process.exit(1);
  });
}

module.exports = { testGoogleDriveIntegration };
