const TelegramBot = require('node-telegram-bot-api');
const { GoogleGenerativeAI } = require('@google/generative-ai');
require('dotenv').config();

// Bot configuration
const token = process.env.TELEGRAM_BOT_TOKEN;
const bot = new TelegramBot(token, { polling: true });

// Gemini AI configuration  
const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);

console.log('ü§ñ Ashval Telegram Bot ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô...');
console.log('üì± Bot Token:', token ? '‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‚úÖ' : '‡πÑ‡∏°‡πà‡∏û‡∏ö Token ‚ùå');

// Start command
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    const welcomeMessage = `üè∞ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà Ashval Database Optimizer Bot!

üéØ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ:
‚Ä¢ üí¨ Chat ‡∏Å‡∏±‡∏ö AI (Gemini Flash/Pro)
‚Ä¢ üóÉÔ∏è ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Notion
‚Ä¢ üìä ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
‚Ä¢ üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

üìù ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ:
/help - ‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
/database - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
/status - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞

üí° ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏î‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠ Chat ‡∏Å‡∏±‡∏ö AI!`;
    
    bot.sendMessage(chatId, welcomeMessage);
});

// Help command
bot.onText(/\/help/, (msg) => {
    const chatId = msg.chat.id;
    const helpMessage = `üÜò ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:

üîß ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:
/database - ‡πÄ‡∏°‡∏ô‡∏π‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

üìä ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå:
/status - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏ö‡∏ö

üí¨ AI Chat:
‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏î‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠ Chat ‡∏Å‡∏±‡∏ö Gemini AI
(‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: Flash ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡πÄ‡∏ö‡∏≤, Pro ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏Å)

üè∞ Ashval Database Optimizer Bot v1.0`;
    
    bot.sendMessage(chatId, helpMessage);
});

// Database menu
bot.onText(/\/database/, (msg) => {
    const chatId = msg.chat.id;
    const opts = {
        reply_markup: {
            inline_keyboard: [
                [{ text: 'üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö', callback_data: 'fill_data' }],
                [{ text: 'üìä ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô', callback_data: 'analyze_columns' }],
                [{ text: '‚ö° ‡∏≠‡∏≠‡∏õ‡∏ï‡∏¥‡πÑ‡∏°‡∏ã‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', callback_data: 'optimize_all' }]
            ]
        }
    };
    
    bot.sendMessage(chatId, 'üóÉÔ∏è ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', opts);
});

// Handle callback queries
bot.on('callback_query', async (callbackQuery) => {
    const message = callbackQuery.message;
    const chatId = message.chat.id;
    const data = callbackQuery.data;
    
    bot.answerCallbackQuery(callbackQuery.id);
    
    let endpoint = '';
    let action = '';
    
    switch (data) {
        case 'fill_data':
            endpoint = '/api/agent/database/fill-missing';
            action = 'üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô...';
            break;
        case 'analyze_columns':
            endpoint = '/api/agent/database/analyze-columns';
            action = 'üìä ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô...';
            break;
        case 'optimize_all':
            endpoint = '/api/agent/database/optimize';
            action = '‚ö° ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏≠‡∏õ‡∏ï‡∏¥‡πÑ‡∏°‡∏ã‡πå‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...';
            break;
    }
    
    if (endpoint) {
        bot.sendMessage(chatId, action);
        await callDatabaseAPI(endpoint, chatId);
    }
});

// Status command
bot.onText(/\/status/, async (msg) => {
    const chatId = msg.chat.id;
    await checkSystemStatus(chatId);
});

// Handle AI chat
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;
    
    // Skip commands
    if (!text || text.startsWith('/')) return;
    
    try {
        bot.sendChatAction(chatId, 'typing');
        
        // Smart model selection
        const complexity = assessComplexity(text);
        const modelName = complexity === 'heavy' ? 'gemini-2.5-pro' : 'gemini-1.5-flash';
        
        console.log(`üß† ‡πÉ‡∏ä‡πâ‡πÇ‡∏°‡πÄ‡∏î‡∏•: ${modelName} (${complexity}) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö: "${text.substring(0, 30)}..."`);
        
        const model = genAI.getGenerativeModel({ model: modelName });
        
        const prompt = `‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ Ashval AI Assistant ‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Notion ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢ Ashval
        
‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå: ${text}`;
        
        const result = await model.generateContent(prompt);
        const response = result.response;
        const aiText = response.text();
        
        // Split long messages (Telegram limit = 4096 chars)
        if (aiText.length > 4000) {
            const chunks = aiText.match(/.{1,4000}/g);
            for (let i = 0; i < chunks.length; i++) {
                await bot.sendMessage(chatId, `${chunks[i]}${i < chunks.length - 1 ? '\n\n(‡∏ï‡πà‡∏≠...)' : ''}`);
                if (i < chunks.length - 1) await new Promise(resolve => setTimeout(resolve, 1000));
            }
        } else {
            bot.sendMessage(chatId, `ü§ñ ${modelName}: ${aiText}`);
        }
        
    } catch (error) {
        console.error('Error in AI chat:', error);
        bot.sendMessage(chatId, '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ AI ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
    }
});

// Assess message complexity for smart model selection
function assessComplexity(text) {
    const heavyKeywords = [
        '‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå', 'analyze', '‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô', 'complex', 'detailed', '‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î',
        '‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö', 'compare', '‡∏™‡∏£‡∏∏‡∏õ', 'summary', '‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢', 'explain',
        '‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô', 'plan', 'strategy', '‡∏¢‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå', 'architecture', '‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á'
    ];
    
    const wordCount = text.split(/\s+/).length;
    const hasHeavyKeywords = heavyKeywords.some(keyword => 
        text.toLowerCase().includes(keyword.toLowerCase())
    );
    
    return (wordCount > 15 || hasHeavyKeywords) ? 'heavy' : 'light';
}

// Call database API
async function callDatabaseAPI(endpoint, chatId) {
    try {
        const https = require('https');
        const http = require('http');
        
        const postData = JSON.stringify({
            source: 'telegram_bot',
            chatId: chatId,
            timestamp: new Date().toISOString()
        });
        
        const options = {
            hostname: 'localhost',
            port: 3001,
            path: endpoint,
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Content-Length': Buffer.byteLength(postData)
            }
        };
        
        const req = http.request(options, (res) => {
            let data = '';
            
            res.on('data', (chunk) => {
                data += chunk;
            });
            
            res.on('end', () => {
                try {
                    if (res.statusCode === 200) {
                        const result = JSON.parse(data);
                        bot.sendMessage(chatId, `‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\nüìä ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:\n${JSON.stringify(result, null, 2).substring(0, 3000)}`);
                    } else {
                        bot.sendMessage(chatId, `‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î (${res.statusCode}): ${data}`);
                    }
                } catch (parseError) {
                    bot.sendMessage(chatId, `‚úÖ ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß! (${res.statusCode})`);
                }
            });
        });
        
        req.on('error', (error) => {
            console.error('API call error:', error);
            bot.sendMessage(chatId, '‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà');
        });
        
        req.write(postData);
        req.end();
        
    } catch (error) {
        console.error('API call error:', error);
        bot.sendMessage(chatId, '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API');
    }
}

// Check system status
async function checkSystemStatus(chatId) {
    const statusMessage = `üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏ö‡∏ö Ashval Database Optimizer

üîó ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå: ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà localhost:3001
üóÉÔ∏è ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: Notion API ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
ü§ñ AI Model: Smart Selection (Flash/Pro)
ü§ñ Bot Token: ${process.env.TELEGRAM_BOT_TOKEN ? '‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ ‚úÖ' : '‡πÑ‡∏°‡πà‡∏û‡∏ö ‚ùå'}
‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤: ${new Date().toLocaleString('th-TH')}

‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£!

üìã Database IDs:
‚Ä¢ Characters: ${process.env.NOTION_CHARACTERS_DB_ID ? '‚úÖ' : '‚ùå'}
‚Ä¢ Scenes: ${process.env.NOTION_SCENES_DB_ID ? '‚úÖ' : '‚ùå'}
‚Ä¢ Locations: ${process.env.NOTION_LOCATIONS_DB_ID ? '‚úÖ' : '‚ùå'}`;
    
    bot.sendMessage(chatId, statusMessage);
}

// Error handling
bot.on('polling_error', (error) => {
    console.error('‚ùå Polling error:', error.message);
});

bot.on('error', (error) => {
    console.error('‚ùå Bot error:', error.message);
});

console.log('üöÄ Ashval Telegram Bot ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!');
console.log('üì± ‡∏û‡∏¥‡∏°‡∏û‡πå /start ‡πÉ‡∏ô Telegram ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
console.log('üîó Bot Username: @' + (process.env.BOT_USERNAME || '‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏ô .env'));
