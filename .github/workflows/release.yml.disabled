name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Run tests
      run: |
        if grep -q "\"test\"" package.json; then
          npm test
        else
          echo "No tests configured, skipping..."
        fi

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## ü¶Ñ Notion MCP Server Release ${{ steps.get_version.outputs.VERSION }}
          
          ### ‚úÖ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
          
          #### Notion Base Tools (5 ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠)
          - notion_pages - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡πâ‡∏≤
          - notion_blocks - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏•‡πá‡∏≠‡∏Ñ
          - notion_database - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
          - notion_comments - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô
          - notion_users - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
          
          #### Ashval World Building Tools (10 ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠)
          - ashval_version_control - ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô
          - ashval_timeline_analyzer - ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå timeline
          - ashval_conflict_generator - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á
          - ashval_story_arc_analyzer - ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå story arcs
          - ashval_smart_filter - ‡∏™‡∏£‡πâ‡∏≤‡∏á filters ‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞
          - ashval_image_generator - ‡∏™‡∏£‡πâ‡∏≤‡∏á AI image prompts
          - ashval_consistency_checker - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á
          - ashval_world_rules_query - ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏é‡∏Ç‡∏≠‡∏á‡πÇ‡∏•‡∏Å
          - ashval_advanced_prompt_generator - ‡∏™‡∏£‡πâ‡∏≤‡∏á AI prompts
          - ashval_story_structure_analyzer - ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á
          
          ### üöÄ ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
          
          ```bash
          npm install
          npm run build
          npm start
          ```
          
          ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÉ‡∏ô [README.md](README.md)
        draft: false
        prerelease: false

    - name: Build Docker image (if Dockerfile exists)
      run: |
        if [ -f Dockerfile ]; then
          echo "Building Docker image..."
          docker build -t notion-mcp-server:${{ steps.get_version.outputs.VERSION }} .
          docker build -t notion-mcp-server:latest .
          echo "‚úÖ Docker image built successfully"
        else
          echo "No Dockerfile found, skipping Docker build"
        fi

  update-version-status:
    runs-on: ubuntu-latest
    needs: release
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update README with version info
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "Updating README with version $VERSION..."
        
        # Update version badge
        sed -i "s|notion-mcp-server/workflows/CI/badge.svg|notion-mcp-server/workflows/CI/badge.svg|g" README.md
        
        # Add version info if not exists
        if ! grep -q "Latest Version" README.md; then
          sed -i "/\[![Build Status\]/a [![Latest Version](https://img.shields.io/github/v/release/billlzzz10/notion-mcp-server?style=flat&logo=github)](https://github.com/billlzzz10/notion-mcp-server/releases)" README.md
        fi

    - name: Commit version update
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if ! git diff --quiet; then
          git add README.md
          git commit -m "üì¶ Update README for release ${GITHUB_REF#refs/tags/} [skip ci]"
          git push origin main
        fi
